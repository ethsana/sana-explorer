{"version":3,"sources":["component/Flex.tsx","component/Common.tsx","component/Cards.tsx","assets/images/scan_banner-pc.png","assets/images/scan_banner-mb.png","page/home/constrant.ts","page/home/component.tsx","page/home/index.tsx","page/search/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Flex","styled","div","props","display","flex","justifyContent","alignItems","Row","Text","span","BoldText","TxSpan","Card","CardTitle","CardBody","CardTxBody","CARD_TITLE","SANA_SCAN_DATA","netSummary","label","value","netSummary24h","minerSummary","blockSummary","Container","Divider","HiddenDivider","CardRow","marginTop","TRBL","marginRight","marginBottom","marginLeft","ul","li","CardColumn","TimeAndStatus","MarginTopText","DividerCard","Cbanner","NoData","SanaBanner","useState","document","body","clientWidth","isMobile","setMobile","useEffect","onresize","window","addEventListener","removeEventListener","useMemo","src","MbBgbanner","PcBgbanner","alt","width","height","DataCard","title","data","slice","map","i","Home","className","style","index","exact","path","component","Search","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","App","getElementById"],"mappings":"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","file":"static/js/main.e78f1b9c.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const Flex = styled.div(\n  (props: { justifyContent?: string; alignItems?: string }) => ({\n    display: \"flex\",\n    flex: 1,\n    justifyContent: props.justifyContent || \"flex-start\",\n    alignItems: props.alignItems || \"flex-start\",\n  })\n);\n\nexport const Center = styled(Flex)`\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const Colunm = styled(Flex)`\n  flex-direction: column;\n`;\n\nexport const SpaceBetweenRow = styled(Flex)`\n  justify-content: space-between;\n  & > span {\n    flex: 1;\n  }\n`;\n\nexport const SpaceBetweenRowBgColor = styled(Flex)`\n  justify-content: space-between;\n  background-color: #fff;\n  align-items: stretch;\n  padding: 14px 24px;\n  & > div {\n    margin: 0 18px 0 0;\n  }\n  & > span {\n    flex: 1;\n  }\n  @media (max-width: 760px) {\n    flex-direction: column;\n    padding: 12px 20px;\n  }\n  @media (max-width: 360px) {\n    flex-direction: column;\n    padding: 10px 14px;\n  }\n`;\n\nexport const Row = styled(Flex)`\n  @media (max-width: 760px) {\n    flex-direction: column;\n  }\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\n// export const Text = styled.span(\n//   (props: { color?: string; weight?: number; fontSize?: number }) => ({\n//     display: \"inline-block\",\n//     width: \"100%\",\n//     fontSize: props.fontSize ?? \"14px\",\n//     color: props.color ?? \"#666666\",\n//     fontWeight: props.weight ?? 500,\n//     // margin: \"3px 0\",'\n//     // @media (max-width: 760px) {\n//     //   font-size: 14px;\n//     // }\n//   })\n// );\n\nexport const Text = styled.span`\n  display: inline-block;\n  width: 100%;\n  font-size: 15px;\n  font-weight: 500;\n  color: #666666;\n  margin: 3px 0;\n  @media (max-width: 760px) {\n    font-size: 16px;\n  }\n`;\n\nexport const BoldText = styled(Text)`\n  font-size: 22px;\n  font-weight: 800;\n  color: #333333;\n  @media (max-width: 960px) {\n    font-size: 18px;\n  }\n  @media (max-width: 760px) {\n    font-size: 14px;\n  }\n`;\n\nexport const TxSpan = styled.span`\n  font-size: 16px;\n  color: #333333;\n  font-weight: 500;\n  @media (max-width: 760px) {\n    font-size: 14px;\n  }\n`;\n\nexport const ColorText = styled(TxSpan)`\n  color: #4f7dfa;\n  @media (max-width: 760px) {\n    font-size: 15px;\n  }\n`;\n","import styled from \"styled-components\";\n\nconst Card = styled.div`\n  max-width: 100%;\n  min-width: 40%;\n  min-height: 100px;\n  display: inline-block;\n  box-sizing: border-box;\n  background: #f8f8f8;\n  padding: 0 22px;\n  flex: 1;\n  margin-right: 24px;\n  @media (max-width: 760px) {\n    width: 100%;\n    padding: 0 16px;\n    margin-right: 0;\n  }\n`;\n\nexport const CardTitle = styled.div`\n  padding: 24px 0 23px;\n  border-bottom: 1px solid #ececec;\n  @media (max-width: 960px) {\n    padding: 16px 0;\n  }\n`;\n\nexport const CardBody = styled.div`\n  float: left;\n  padding: 22px 0 0;\n  width: 100%;\n  margin-right: 24px;\n\n  @media (max-width: 760px) {\n    overflow-y: hidden;\n    overflow-x: auto;\n    scroll-behavior: smooth;\n    white-space: nowrap;\n    padding: 18px 0;\n    margin-right: 0;\n  }\n`;\n\nexport const CardTxBody = styled.div`\n  padding: 24px 0 0;\n  width: 100%;\n`;\n\nexport default Card;\n","export default __webpack_public_path__ + \"static/media/scan_banner-pc.8120333d.png\";","export default __webpack_public_path__ + \"static/media/scan_banner-mb.7dcda181.png\";","\n\n\nexport interface ElemetType {\n    label: string,\n    value: string,\n}\n\nexport interface CARD_TITLE_INTERFACE {\n    netSummary: string,\n    netSummary24h: string,\n    minerSummary: string,\n    blockSummary: string,\n}\n\nexport const CARD_TITLE: CARD_TITLE_INTERFACE = {\n    netSummary: \"Network Overview\",\n    netSummary24h: \"24 Hour Update\",\n    minerSummary: \"Miner Stats Instruction\",\n    blockSummary: \"Block Reward Instruction\",\n}\n\nexport interface SANA_SCANN_DATA_INTERFACE {\n    netSummary: Array<ElemetType>,\n    netSummary24h: Array<ElemetType>,\n    minerSummary: Array<ElemetType>,\n    blockSummary: Array<ElemetType>,\n}\n\nexport const SANA_SCAN_DATA: SANA_SCANN_DATA_INTERFACE = {\n    netSummary: [\n        {\n            label: \"Total active nodes\",\n            value: \"0\"\n        },\n        {\n            label: \"Total network nodes\",\n            value: \"0\"\n        },\n        {\n            label: \"Network cheque redeemed\",\n            value: \"0\"\n        },\n        {\n            label: \"SANA sent\",\n            value: \"0\"\n        },\n    ],\n    netSummary24h: [\n        {\n            label: \"New active nodes in 24 hours\",\n            value: \"0\"\n        },\n        {\n            label: \"New nodes in 24 hours\",\n            value: \"0\"\n        },\n        {\n            label: \"Cheque redeemed in 24 hours\",\n            value: \"0\"\n        },\n        {\n            label: \"SANA sent in 24 hours\",\n            value: \"0\"\n        },\n    ],\n    minerSummary: [\n        {\n            label: \"Total network miners\",\n            value: \"0\"\n        },\n        {\n            label: \"Active miners\",\n            value: \"0\"\n        },\n        {\n            label: \"New miners in 24 hours\",\n            value: \"0\"\n        },\n        {\n            label: \"Total SANA staked for mining\",\n            value: \"0\"\n        },\n        {\n            label: \"Predicted staked SANA\",\n            value: \"0\"\n        },\n    ],\n    blockSummary: [\n        {\n            label: \"Total SANA minted\",\n            value: \"0\"\n        },\n        {\n            label: \"SANA minted in 24 hours\",\n            value: \"0\"\n        },\n        {\n            label: \"Block reward at current block height\",\n            value: \"0\"\n        },\n        {\n            label: \"All rewards withdrawn\",\n            value: \"0\"\n        },\n    ]\n}\n","import styled from \"styled-components\";\nimport { Text } from \"../../component/Common\";\n\nexport const Container = styled.div`\n  max-width: 80%;\n  margin: 0 auto;\n  @media (max-width: 1200px) {\n    max-width: 90%;\n  }\n  @media (max-width: 960px) {\n    max-width: 95%;\n  }\n  @media (max-width: 760px) {\n    max-width: 96%;\n  }\n`;\n\nexport const Divider = styled.div`\n  display: inline-block;\n  width: 1px;\n  /* height: 50px; */\n  margin: 0 26px;\n  background: #ececec;\n  @media (max-width: 760px) {\n    height: 42px;\n  }\n`;\n\nexport const HiddenDivider = styled(Divider)`\n  display: none;\n  @media (max-width: 760px) {\n    display: inline-block;\n  }\n`;\n\nexport const MarginDiv = styled.div((props: { TRBL: Array<number> }) => ({\n  marginTop: props.TRBL[0] + \"px\",\n  marginRight: props.TRBL[1] + \"px\",\n  marginBottom: props.TRBL[2] + \"px\",\n  marginLeft: props.TRBL[3] + \"px\",\n}));\n\nexport const Ul = styled.ul`\n  position: relative;\n`;\nexport const Li = styled.li`\n  padding: 18px 0;\n  border-bottom: 1px solid #ececec;\n  &:first-child {\n    padding-top: 0px;\n  }\n  &:last-child {\n    border-bottom: none;\n  }\n`;\n\nexport const SplitDiv = styled.div`\n  width: 1px;\n  height: 24px;\n  background-color: #ececec;\n  margin: 0 24px;\n  @media (max-width: 760px) {\n    width: 100%;\n    height: 12px;\n    background-color: transparent;\n    margin: 0;\n  }\n`;\n\nexport const CardRow = styled.div`\n  margin-bottom: 26px;\n  display: flex;\n  align-items: stretch;\n  justify-content: space-between;\n\n  @media (max-width: 760px) {\n    display: inline-block;\n    margin-bottom: 0;\n    float: none;\n  }\n`;\n\nexport const CardColumn = styled.div`\n  display: inline-block;\n  box-sizing: border-box;\n  flex: 1;\n  span {\n    display: block;\n  }\n\n  @media (max-width: 760px) {\n    width: auto;\n    &:first-child {\n      padding-left: 0;\n    }\n  }\n`;\n\nexport const TxHeader = styled.div`\n  float: left;\n  width: 100%;\n  padding-bottom: 24px;\n  @media (max-width: 760px) {\n    float: none;\n    padding-bottom: 0;\n  }\n`;\n\nexport const TxHash = styled.div`\n  display: inline-block;\n  width: 50%;\n  @media (max-width: 760px) {\n    width: 100%;\n    padding: 12px 0 10px;\n  }\n`;\n\nexport const TimeAndStatus = styled.div`\n  display: inline-block;\n  & > span {\n    display: inline-block;\n    width: 50%;\n    &:nth-of-type(2) {\n      text-align: right;\n    }\n  }\n`;\n\nexport const PcTimeAndStatus = styled(TimeAndStatus)`\n  width: 50%;\n  @media (max-width: 760px) {\n    display: none;\n  }\n`;\n\nexport const MbTimeAndStatus = styled(TimeAndStatus)`\n  width: 100%;\n  display: none;\n  @media (max-width: 760px) {\n    display: inline-block;\n  }\n`;\n\nexport const BoxSizeText = styled(Text)`\n  max-width: 50px;\n  color: #333333;\n`;\n\nexport const MarginTopText = styled(Text)`\n  margin-top: 8px;\n`;\n\nexport const DividerCard = styled.div`\n  display: none;\n  @media (max-width: 760px) {\n    display: block;\n    width: 100%;\n    height: 23px;\n  }\n`;\n\nexport const Cbanner = styled.div`\n  width: 100%;\n  overflow: hidden;\n`;\n\nexport const NoData = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 50px;\n  text-align: center;\n  color: #333333;\n  font-size: 16px;\n  padding: 12px 0 24px;\n`;\n","import React, { useEffect, useState, useMemo } from \"react\";\nimport { Flex, Row, SpaceBetweenRowBgColor } from \"../../component/Flex\";\nimport { BoldText, TxSpan, ColorText } from \"../../component/Common\";\nimport Card, { CardTitle, CardBody, CardTxBody } from \"../../component/Cards\";\n\nimport PcBgbanner from \"../../assets/images/scan_banner-pc.png\";\nimport MbBgbanner from \"../../assets/images/scan_banner-mb.png\";\nimport Logo from \"../../assets/images/sana-logo.png\";\nimport { ElemetType, SANA_SCAN_DATA, CARD_TITLE } from \"./constrant\";\nimport \"./index.scss\";\nimport {\n  Ul,\n  Li,\n  TxHash,\n  NoData,\n  CardRow,\n  Divider,\n  Cbanner,\n  TxHeader,\n  SplitDiv,\n  Container,\n  CardColumn,\n  DividerCard,\n  BoxSizeText,\n  MarginTopText,\n  HiddenDivider,\n  PcTimeAndStatus,\n  MbTimeAndStatus,\n} from \"./component\";\n\nconst SanaBanner = () => {\n  const [isMobile, setMobile] = useState(document.body.clientWidth < 760);\n\n  useEffect(() => {\n    const onresize = () => {\n      setMobile(document.body.clientWidth < 760);\n    };\n    window.addEventListener(\"resize\", onresize, false);\n    return () => {\n      window.removeEventListener(\"resize\", onresize, false);\n    };\n  }, []);\n\n  return useMemo(\n    () => (\n      <Cbanner>\n        <img\n          src={isMobile ? MbBgbanner : PcBgbanner}\n          alt=\"\"\n          width=\"100%\"\n          height=\"auto\"\n        />\n      </Cbanner>\n    ),\n    [isMobile]\n  );\n};\n\nconst DataCard = ({\n  title,\n  data,\n}: {\n  title: string;\n  data: Array<ElemetType>;\n}) => {\n  return (\n    <Card>\n      <CardTitle>\n        <BoldText>{title}</BoldText>\n      </CardTitle>\n      <CardBody>\n        <CardRow>\n          {data.slice(0, 2).map(({ label, value }, i) => (\n            <>\n              <CardColumn key={label}>\n                <BoldText>{value}</BoldText>\n                <MarginTopText>{label}</MarginTopText>\n              </CardColumn>\n              {i === 0 && <Divider />}\n            </>\n          ))}\n        </CardRow>\n        <HiddenDivider />\n        <CardRow>\n          {data.slice(2, 4).map(({ label, value }, i) => (\n            <>\n              <CardColumn key={label}>\n                <BoldText>{value}</BoldText>\n                <MarginTopText>{label}</MarginTopText>\n              </CardColumn>\n              {i === 0 && <Divider />}\n            </>\n          ))}\n        </CardRow>\n        {data[4] && (\n          <>\n            <HiddenDivider />\n            <CardRow>\n              <CardColumn>\n                <BoldText>{data[4].value}</BoldText>\n                <MarginTopText>{data[4].label}</MarginTopText>\n              </CardColumn>\n            </CardRow>\n          </>\n        )}\n      </CardBody>\n    </Card>\n  );\n};\n\nconst Home = () => {\n  return (\n    <div className=\"home\">\n      {/* <Container>\n        <Flex justifyContent=\"space-between\" style={{ padding: \"12px 0\" }}>\n          <img src={Logo} alt=\"\" width=\"50px\" height=\"50px\" className=\"logo\" />\n          <div className=\"c-input\">\n            <input placeholder=\"Wallet Address/Contracts Address\" />\n            <button>search</button>\n          </div>\n        </Flex>\n      </Container> */}\n      <SanaBanner />\n      <Container>\n        <Row style={{ marginTop: \"24px\" }} alignItems=\"stretch\">\n          <DataCard\n            title={CARD_TITLE.netSummary}\n            data={SANA_SCAN_DATA.netSummary}\n          />\n          <DividerCard />\n          <DataCard\n            title={CARD_TITLE.netSummary24h}\n            data={SANA_SCAN_DATA.netSummary24h}\n          />\n        </Row>\n        <Row style={{ marginTop: \"24px\" }}>\n          <DataCard\n            title={CARD_TITLE.minerSummary}\n            data={SANA_SCAN_DATA.minerSummary}\n          />\n          <DividerCard />\n          <DataCard\n            title={CARD_TITLE.blockSummary}\n            data={SANA_SCAN_DATA.blockSummary}\n          />\n        </Row>\n      </Container>\n      <Container style={{ marginTop: \"24px\" }}>\n        <Card style={{ width: \"100%\" }}>\n          <CardTitle>\n            <BoldText>Latest Transaction</BoldText>\n          </CardTitle>\n          <CardTxBody>\n            <NoData>no transactions</NoData>\n            {/* <Ul>\n              <Li>\n                <TxHeader>\n                  <MbTimeAndStatus>\n                    <TxSpan>36min</TxSpan>\n                    <ColorText>withdraw</ColorText>\n                  </MbTimeAndStatus>\n                  <TxHash>\n                    <TxSpan>Hash:0xf094164184146341365...06c2</TxSpan>\n                  </TxHash>\n                  <PcTimeAndStatus>\n                    <TxSpan>36min</TxSpan>\n                    <ColorText>withdraw</ColorText>\n                  </PcTimeAndStatus>\n                </TxHeader>\n                <SpaceBetweenRowBgColor>\n                  <Flex alignItems=\"center\">\n                    <BoxSizeText>From:</BoxSizeText>\n                    <ColorText>0xf094164184146341365...06c2</ColorText>\n                  </Flex>\n                  <SplitDiv />\n                  <Flex alignItems=\"center\">\n                    <BoxSizeText>To:</BoxSizeText>\n                    <ColorText>0xf094164184146341365...06c2</ColorText>\n                  </Flex>\n                </SpaceBetweenRowBgColor>\n              </Li>\n            </Ul> */}\n          </CardTxBody>\n        </Card>\n      </Container>\n    </div>\n  );\n};\n\nexport default Home;\n","import React from \"react\";\n\nexport default function index() {\n  return <div>home</div>;\n}\n","import React from \"react\";\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\n\nimport Home from \"./page/home\";\nimport Search from \"./page/search\";\n\nexport default () => (\n  <HashRouter>\n    <Switch>\n      <Route exact path=\"/\" component={Home}></Route>\n      <Route exact path=\"/search\" component={Search}></Route>\n    </Switch>\n  </HashRouter>\n);\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}